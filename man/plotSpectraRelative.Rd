% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reef-summary_plots.R
\name{plotSpectraRelative}
\alias{plotSpectraRelative}
\alias{plotlySpectraRelative}
\title{Plot the relative difference or percent change between two spectra}
\usage{
plotSpectraRelative(
  object1,
  object2,
  species = NULL,
  power,
  diff_method = "percent_change",
  ...
)

plotlySpectraRelative(object1, object2, diff_method, ...)
}
\arguments{
\item{object1}{An object of class MizerSim or MizerParams}

\item{object2}{An object of class MizerSim or MizerParams}

\item{species}{The species to be selected. Optional. By default all
species are selected. A vector of species names, or a
numeric vector with the species indices, or a logical
vector indicating for each species whether it is to be
selected (TRUE) or not.}

\item{power}{The abundance is plotted as the number density times the weight
raised to this power. The default power = 1 gives the biomass density,
whereas power = 2 gives the biomass density with respect to logarithmic
size bins.}

\item{diff_method}{The method to calculate the relative change between
models. If \code{percent.change}, the percent change is
calculated relative to the value from object 1 with
formula 100*(new-old)/old. If \code{rel.diff} the relative
difference is returned given by (new - old)/(old + new).}

\item{...}{Parameters passed to \code{plotSpectra()}}
}
\value{
A ggplot2 object
}
\description{
This plots a measure of the relative difference between the steady state
spectra of two mizer objects. The user can choose how this difference is
calculated. Let the spectra of the two objects be represented as
\eqn{N_1(w)} and \eqn{N_2(w)}.
}
\details{
If \code{diff_method} is given as \code{percent_change}, this function plots the
percent change, given by \deqn{ 100*(N_2(w) - N_1(w)) / (N_1(w)).}

If \code{diff_method} is given as \code{rel_diff} the difference is calculated
relative to their average, so \deqn{2 (N_2(w) - N_1(w)) / (N_2(w) + N_1(w)).}

The individual spectra are calculated by the \code{\link[=plotSpectra]{plotSpectra()}} function which
is passed all additional arguments you supply. So you can for example
determine a size range over which to average the simulation results via the
\code{time_range} argument. See \code{\link[=plotSpectra]{plotSpectra()}} for more options.

Note that it does not matter whether the relative difference is calculated
for the number density or the biomass density or the biomass density in log
weight because the factors of \eqn{w} by which the densities differ cancels
out in the relative difference.
}
\seealso{
Other plotting functions: 
\code{\link{plot2Productivity}()},
\code{\link{plot2TotalBiomass}()},
\code{\link{plotBiomass}()},
\code{\link{plotProductivity}()},
\code{\link{plotProductivityRelative}()},
\code{\link{plotRefuge}()},
\code{\link{plotRelativeContribution}()},
\code{\link{plotTotalAbundance}()},
\code{\link{plotTotalBiomass}()},
\code{\link{plotTotalBiomassRelative}()},
\code{\link{plotVulnerable}()}
}
\concept{plotting functions}
\concept{sumplots}
