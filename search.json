[{"path":"https://cmbeese.github.io/mizerReef/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gustav Delius. Maintainer, author, copyright holder. Chelsey M. Beese. Author. Peter J. Mumby. Author. Alice Rogers. Author.","code":""},{"path":"https://cmbeese.github.io/mizerReef/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Delius G, Beese C, Mumby P, Rogers (2024). mizerReef: MizerReef: Multi-species Size Spectrum Modelling Coral Reefs. R package version 1.0.0, https://github.com/sizespectrum/mizerReef, https://cmbeese.github.io/mizerReef/, https://sizespectrum.org/mizerReef/.","code":"@Manual{,   title = {mizerReef: MizerReef: Multi-species Size Spectrum Modelling for Coral Reefs},   author = {Gustav Delius and Chelsey M. Beese and Peter J. Mumby and Alice Rogers},   year = {2024},   note = {R package version 1.0.0, https://github.com/sizespectrum/mizerReef, https://cmbeese.github.io/mizerReef/},   url = {https://sizespectrum.org/mizerReef/}, }"},{"path":"https://cmbeese.github.io/mizerReef/index.html","id":"section","dir":"","previous_headings":"","what":"MizerReef: Multi-species Size Spectrum Modelling for Coral Reefs","title":"MizerReef: Multi-species Size Spectrum Modelling for Coral Reefs","text":"extension package mizer package (https://sizespectrum.org/mizer/) makes easy set mizer model tropical coral reef ecosystems. includes unstructured algae detritus resources addition plankton. Predator-prey interactions mediated predation refuge simulate benthic complexity. package developed support creation exploration generic model tropical coral reefs.","code":""},{"path":"https://cmbeese.github.io/mizerReef/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"MizerReef: Multi-species Size Spectrum Modelling for Coral Reefs","text":"can install development version mizerReef GitHub gives error saying “package called remotes” also need trying install mizerReef. may prompted update existing packages. two packages always update mizer mizerExperimental, mizerReef package always designed work recent version .","code":"remotes::install_github(\"cmbeese/mizerReef\") install.packages(\"remotes\")"},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_biomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Algae Biomass — algae_biomass","title":"Algae Biomass — algae_biomass","text":"algae resource pool represents combination algal turf mats, macroalgae, epilithic algal matrix (including detritus). size structured reflect fact herbivorous fish feed algae regardless body size.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_biomass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algae Biomass — algae_biomass","text":"","code":"algae_biomass(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_biomass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algae Biomass — algae_biomass","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_biomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Algae Biomass — algae_biomass","text":"algae biomass grams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_consumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass-specific algae consumption rate — algae_consumption","title":"Mass-specific algae consumption rate — algae_consumption","text":"mass-specific consumption rate used algae_dynamics() calculate algae biomass next time step. get non-mass-specific consumption rate, use getAlgaeConsumption().","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_consumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass-specific algae consumption rate — algae_consumption","text":"","code":"algae_consumption(params, n = params@initial_n, rates = getRates(params))"},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_consumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mass-specific algae consumption rate — algae_consumption","text":"params MizerParams n matrix current species abundances (species x size) rates list rates returned getRates()","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_consumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mass-specific algae consumption rate — algae_consumption","text":"mass-specific consumption rate algae grams per year.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_consumption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mass-specific algae consumption rate — algae_consumption","text":"consumption rate herbivorous fish determined other_params(params)$algae$rho","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_dynamics.html","id":null,"dir":"Reference","previous_headings":"","what":"Algae dynamics — algae_dynamics","title":"Algae dynamics — algae_dynamics","text":"Calculates algae biomass next time step current algae biomass","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_dynamics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algae dynamics — algae_dynamics","text":"","code":"algae_dynamics(params, n, n_other, rates, dt, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_dynamics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algae dynamics — algae_dynamics","text":"params MizerParams object n matrix current species abundances (species x size) n_other dynamic components. rates list rates returned getRates() dt Time step size ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_dynamics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Algae dynamics — algae_dynamics","text":"single number giving algae biomass next time step","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_dynamics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Algae dynamics — algae_dynamics","text":"time evolution algae biomass \\(B\\) described $$dB/dt = \\tt{production} - \\tt{consumption} * B$$ *consumption mass-specific rate consumption calculated algae_consumption(), *production rate algae grows, calculated getAlgaeProduction(). dynamical equation solved analytically $$B(t+dt) = B(t)\\exp(-\\tt{consumption} \\cdot dt)   +\\frac{\\tt{production}}{\\tt{consumption}}   (1-\\exp(-\\tt{consumption} \\cdot dt)).$$ avoids stability problems arise used Euler method solve equation numerically.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_lifetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected algae lifetime — algae_lifetime","title":"Expected algae lifetime — algae_lifetime","text":"expected algae lifetime defined inverse mass-specific algae consumption rate.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_lifetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected algae lifetime — algae_lifetime","text":"","code":"algae_lifetime(params)  algae_lifetime(params) <- value"},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_lifetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected algae lifetime — algae_lifetime","text":"params MizerParams object value number new value expected lifetime years Assigning new value algae lifetime rescales algae abundance keeping total consumption algae (adjusting interaction strength species algae).","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/algae_lifetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected algae lifetime — algae_lifetime","text":"number giving expected lifetime years.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_int.html","id":null,"dir":"Reference","previous_headings":"","what":"interaction matrix for thesis, chapter 3 vignettes — bonaire_int","title":"interaction matrix for thesis, chapter 3 vignettes — bonaire_int","text":"interaction matrix thesis, chapter 3 vignettes","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interaction matrix for thesis, chapter 3 vignettes — bonaire_int","text":"","code":"bonaire_int"},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_int.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"interaction matrix for thesis, chapter 3 vignettes — bonaire_int","text":"MizerParams object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_int.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"interaction matrix for thesis, chapter 3 vignettes — bonaire_int","text":"PhD Thesis","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_refuge.html","id":null,"dir":"Reference","previous_headings":"","what":"refuge paramters for thesis, chapter 3 vignettes — bonaire_refuge","title":"refuge paramters for thesis, chapter 3 vignettes — bonaire_refuge","text":"refuge paramters thesis, chapter 3 vignettes","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_refuge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"refuge paramters for thesis, chapter 3 vignettes — bonaire_refuge","text":"","code":"bonaire_refuge"},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_refuge.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"refuge paramters for thesis, chapter 3 vignettes — bonaire_refuge","text":"MizerParams object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_refuge.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"refuge paramters for thesis, chapter 3 vignettes — bonaire_refuge","text":"PhD Thesis","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_species.html","id":null,"dir":"Reference","previous_headings":"","what":"MizerParams object object for thesis, chapter 4 Caribbean model\nwith 10 functional groups — bonaire_species","title":"MizerParams object object for thesis, chapter 4 Caribbean model\nwith 10 functional groups — bonaire_species","text":"MizerParams object object thesis, chapter 4 Caribbean model 10 functional groups","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MizerParams object object for thesis, chapter 4 Caribbean model\nwith 10 functional groups — bonaire_species","text":"","code":"bonaire_species"},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MizerParams object object for thesis, chapter 4 Caribbean model\nwith 10 functional groups — bonaire_species","text":"MizerParams object MizerParams object MizerParams object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/bonaire_species.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"MizerParams object object for thesis, chapter 4 Caribbean model\nwith 10 functional groups — bonaire_species","text":"PhD Thesis cbn_params\" MizerParams object thesis, chapter 3 vignettes PhD Thesis species_params thesis, chapter 3 vignettes PhD Thesis","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_biomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Detritus Biomass — detritus_biomass","title":"Detritus Biomass — detritus_biomass","text":"detrital resource pool represents consumed wastes, including decomposing dead organisms feces. Similar algae, detritus resource size structured herbivores size feed detritus coral reefs.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_biomass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detritus Biomass — detritus_biomass","text":"","code":"detritus_biomass(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_biomass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detritus Biomass — detritus_biomass","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_biomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detritus Biomass — detritus_biomass","text":"detritus biomass grams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_consumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Mass-specific detritus consumption rate — detritus_consumption","title":"Mass-specific detritus consumption rate — detritus_consumption","text":"mass-specific consumption rate used detritus_dynamics() calculate detritus biomass next time step. get non-mass-specific consumption rate, use getDetritusConsumption().","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_consumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mass-specific detritus consumption rate — detritus_consumption","text":"","code":"detritus_consumption(params, n = params@initial_n, rates = getRates(params))"},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_consumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mass-specific detritus consumption rate — detritus_consumption","text":"params MizerParams n matrix current species abundances (species x size) rates list rates returned getRates()","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_consumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mass-specific detritus consumption rate — detritus_consumption","text":"mass-specific consumption rate detritus grams per year.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_consumption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mass-specific detritus consumption rate — detritus_consumption","text":"consumption rate detritivorous fish determined other_params(params)$detritus$rho","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_dynamics.html","id":null,"dir":"Reference","previous_headings":"","what":"Detritus dynamics — detritus_dynamics","title":"Detritus dynamics — detritus_dynamics","text":"Calculates detritus biomass next time step based current detritus biomass.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_dynamics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detritus dynamics — detritus_dynamics","text":"","code":"detritus_dynamics(params, n, n_other, rates, dt, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_dynamics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detritus dynamics — detritus_dynamics","text":"params MizerParams object n matrix current species abundances (species x size) n_other dynamic components. rates list rates returned getRates() dt Time step size ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_dynamics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detritus dynamics — detritus_dynamics","text":"vector giving detritus spectrum next time step.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_dynamics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detritus dynamics — detritus_dynamics","text":"time evolution detritus biomass \\(B\\) described $$dB/dt = \\tt{production} - \\tt{consumption} * B + \\tt{external}$$ consumption mass-specific rate consumption, calculated detritus_consumption() production rate rest system produces detritus biomass, calculate getDetritusProduction() dynamical equation solved analytically $$B(t+dt) = B(t)\\exp(-\\tt{consumption} \\cdot dt)   +\\frac{\\tt{production}}{\\tt{consumption}}   (1-\\exp(-\\tt{consumption} \\cdot dt)).$$ avoids stability problems arise used Euler method solve equation numerically.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_lifetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected detritus lifetime — detritus_lifetime","title":"Expected detritus lifetime — detritus_lifetime","text":"expected detritus lifetime defined inverse mass-specific detritus consumption rate.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_lifetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected detritus lifetime — detritus_lifetime","text":"","code":"detritus_lifetime(params)  detritus_lifetime(params) <- value"},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_lifetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected detritus lifetime — detritus_lifetime","text":"params MizerParams object value number new value expected lifetime years Assigning new value detritus lifetime rescales detritus abundance keeping total consumption detritus (adjusting interaction strength species detritus).","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/detritus_lifetime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected detritus lifetime — detritus_lifetime","text":"number giving expected lifetime years.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/different.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether two objects are different — different","title":"Check whether two objects are different — different","text":"Check whether two objects numerically different, ignoring attributes.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/different.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether two objects are different — different","text":"","code":"different(a, b)"},{"path":"https://cmbeese.github.io/mizerReef/reference/different.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether two objects are different — different","text":"First object b Second object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/different.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether two objects are different — different","text":"TRUE FALSE","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/different.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check whether two objects are different — different","text":"use helper function particular see new value slot MizerParams different existing value order give appropriate messages.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/encounter_contribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Contribution of unstructured components to the encounter rate — encounter_contribution","title":"Contribution of unstructured components to the encounter rate — encounter_contribution","text":"encounter rate \\(E_i(w)\\) unstructured resource like algae detritus proportional total biomass \\(B\\) coefficient \\(\\rho_i(w)\\) depends functional group \\(\\) size consumer:","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/encounter_contribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contribution of unstructured components to the encounter rate — encounter_contribution","text":"","code":"encounter_contribution(params, n_other, component, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/encounter_contribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contribution of unstructured components to the encounter rate — encounter_contribution","text":"params MizerParams n_other Biomasses unstructured components component Name component whose contribution requested ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/encounter_contribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contribution of unstructured components to the encounter rate — encounter_contribution","text":"Array (species x size) encounter rate g/year.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/encounter_contribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Contribution of unstructured components to the encounter rate — encounter_contribution","text":"$$E_i(w) = \\rho_i(w) B.$$ coefficient \\(\\rho_i(w)\\) stored matrix (species x size) rho parameter component. units 1/year.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeConsumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Get algae consumption rates — getAlgaeConsumption","title":"Get algae consumption rates — getAlgaeConsumption","text":"function returns named vector one component species giving rate grams/year species consumes algae","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeConsumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get algae consumption rates — getAlgaeConsumption","text":"","code":"getAlgaeConsumption(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeConsumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get algae consumption rates — getAlgaeConsumption","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeConsumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get algae consumption rates — getAlgaeConsumption","text":"named vector consumption rates herbivores","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeProduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Algae production rate — getAlgaeProduction","title":"Algae production rate — getAlgaeProduction","text":"rate grams/year/m^-2 system produces algae biomass. rate set production consumption equal chosen steady state abundances.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeProduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algae production rate — getAlgaeProduction","text":"","code":"getAlgaeProduction(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeProduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algae production rate — getAlgaeProduction","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getAlgaeProduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Algae production rate — getAlgaeProduction","text":"annual growth rate algae per square meter","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusConsumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Get detritus consumption rates — getDetritusConsumption","title":"Get detritus consumption rates — getDetritusConsumption","text":"function returns named vector one component species giving rate grams/year species consumes detritus","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusConsumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get detritus consumption rates — getDetritusConsumption","text":"","code":"getDetritusConsumption(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusConsumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get detritus consumption rates — getDetritusConsumption","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusConsumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get detritus consumption rates — getDetritusConsumption","text":"named vector consumption rates herbivores","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusProduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Detritus production rate — getDetritusProduction","title":"Detritus production rate — getDetritusProduction","text":"Gives named vector rates different components ecosystem produce detritus:","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusProduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detritus production rate — getDetritusProduction","text":"","code":"getDetritusProduction(params, n = params@initial_n, rates = getRates(params))"},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusProduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detritus production rate — getDetritusProduction","text":"params MizerParams n matrix current species abundances (species x size) rates list rates returned getRates()","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusProduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detritus production rate — getDetritusProduction","text":"vector named entries \"feces\", \"decomp\", \"external\", giving rates detritus biomass produced sources grams per year.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getDetritusProduction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detritus production rate — getDetritusProduction","text":"consumed biomass assimilated predators (\"feces\"), decomposing dead organisms (\"decomp\"), pelagic zone (\"external\"). mizerReef models include two sources external mortality describe deaths natural causes due predation modelled species. External mortality includes deaths lead detritus, also deaths due predation species explicitly modelled, example transient predators, mammals, sea birds. Thus, proportion material stay system decompose. parameter prop_decomp describes proportion external mortality stays system decomposes detritus. External detritus waste material sinks pelagic zone. rate model parameter independent model component. set production consumption equal chosen steady state abundances. function returns vector individual contributions source. can summed sum() get total detritus production rate.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getProductivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate fisheries productivity for each functional group above a chosen\nminimum fishing size — getProductivity","title":"Calculate fisheries productivity for each functional group above a chosen\nminimum fishing size — getProductivity","text":"Fisheries productivity refers rate fish biomass produced available harvest given area given period time. Productivity measured situ.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getProductivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate fisheries productivity for each functional group above a chosen\nminimum fishing size — getProductivity","text":"","code":"getProductivity(object, min_fishing_l = 7, max_fishing_l = 50, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/getProductivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate fisheries productivity for each functional group above a chosen\nminimum fishing size — getProductivity","text":"object object class MizerParams MizerSim.given MizerSim object, uses growth rates final time simulation calculate productivity. given MizerParams object, uses initial growth rates. min_fishing_l minimum length (cm) fished individuals productivity estimates. Defaults 7 cm. max_fishing_l maximum length (cm) fished individuals productivity estimates. Defaults max length. ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getProductivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate fisheries productivity for each functional group above a chosen\nminimum fishing size — getProductivity","text":"called MizerParams object, vector productivity grams/year/m^-2 functional group model. called MizerSim object, array (time x species) containing productivity time step species.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getProductivity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate fisheries productivity for each functional group above a chosen\nminimum fishing size — getProductivity","text":"productivity \\(P_i(w)\\) functional group \\(\\) given   \\(N_i(w)\\) abundance density (1/m^-2) \\(g_i(w)\\) energy rate available growth metabolism, movement reproduction accounted (grams/year). productivity calculated fish size range min_fishing_length max_fishing_lengthwhich can functional groups can specified vector one value species model.min_fishing_length defaults \\(7 cm\\) regardless functional group max_fishing_length defaults maximum weight model.","code":"\\deqn{P_i(w) = \\int_w^{w+dw} \\left( N_i(w) + g_i(w) \\right) w \\, dw.}      {P_i(w) = \\int_w^{w+dw} \\left( N_i(w) + g_i(w) \\right) w \\, dw.}"},{"path":"https://cmbeese.github.io/mizerReef/reference/getRefuge.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines refuge length bins by functional group, sets proportion of fish\nin refuge — getRefuge","title":"Defines refuge length bins by functional group, sets proportion of fish\nin refuge — getRefuge","text":"internal helper function used refuge parameters set setRefuge() function.calculates proportion fish predation refuge density-independent sigmoidal binned methods. competitive method, finds indices fish within prescribed size bins.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getRefuge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines refuge length bins by functional group, sets proportion of fish\nin refuge — getRefuge","text":"","code":"getRefuge(params, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/getRefuge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines refuge length bins by functional group, sets proportion of fish\nin refuge — getRefuge","text":"params mizer params object ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getRefuge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines refuge length bins by functional group, sets proportion of fish\nin refuge — getRefuge","text":"mizer params object updated refuge profiles","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getRefuge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defines refuge length bins by functional group, sets proportion of fish\nin refuge — getRefuge","text":"methods, function calculates starting ending body lengths access refuge k. calculated b parameters specific functional group. lengths stored data frame called refuge_lengths other_params slot params object.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getRefuge.html","id":"setting-the-refuge-profile","dir":"Reference","previous_headings":"","what":"Setting the refuge profile","title":"Defines refuge length bins by functional group, sets proportion of fish\nin refuge — getRefuge","text":"Refuge profiles account protective behavior prey living high complexity environments (e.g. coral reefs) access predation refuge. refuge profile defines proportion fish within user-defined length bins protected encountered predator. mizerReef determines much fish weight refuge can hold converting user provided fish length bins weight bins average length weight conversion parameters \\(\\bar{}\\) \\(\\bar{b}\\), describe length weight relationship fish dummies used data collection. default values \\(\\bar{} = 0.025, \\bar{b} = 3\\). Assuming fish shelters neutrally buoyant, mass largest fish size category proportional volume refuges classified category. unique refuge profile generated predator group x prey group x prey size combination based given refuge profile parameters well four values params@species_params: length weight conversion values b, refuge_user, true groups utilize predation refuge, bad_pred, false predator groups whose body shape predatory strategy allow access fish within refuge (e.g. eels). ensure food always available predators, maximum proportion fish protected refuge size class set max_protect. refuge profile used calculating food encounter rate reefEncounter() predation mortality rate reefPredMort(). entries dimensionless values 0 1 represent proportion fish corresponding prey size categories hidden within refuge thus encountered predators. refuge available predator-prey interactions determined entirely size-preference. mizerReef package provides three methods define refuge profile. Sigmoidal Method:  method preferred data-poor reefs reefs refuge distribution unknown. also ideal systems one functional group expected utilizing refuge. proportion fish access refuge \\( R_j(w_p) \\) given $$ R_j(w_p) = \\frac{r}                         {1 + e^{ \\left( \\Delta (w - W_{refuge}) \\right)} }$$ \\(W_{refuge}\\) marks body weight refuge becomes scarcer prey. \\(r\\) defines maximum proportion fish access predation refuge always less equal max_protect. \\(\\alpha\\) controls rate availability refuge decreases increasing body size. defaults steep slope 100. method, method_params contain columns named prop_protect L_refuge give values \\(r\\) length refuge becomes scarce cm. Binned Method:  method appropriate theoretical applications rely empirical data. sets refuge constant proportion fish within given size range.  proportion fish group \\(j\\) access refuge given $$ R_j(w_p) = r_k ~~~~~~~ w_p ∈ (~w_{k-1}, w_k~] $$ \\(r_k\\) proportion fish access refuge size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin prop_protect, proportion fish protected within corresponding size bin. Competitive Method:  method appropriate refuge density data available modelled reef. refuge density describes distribution refuges \\((./m^2)\\) across defined fish body size categories. proportion fish size class \\(k\\) access refuge given $$R_{j}(w_p) = \\tau \\cdot \\frac{ \\eta_{k} }                                     { \\sum_i \\int_{w_{k-1}}^{w-k} N_i(w) \\, dw}$$ \\( \\tau \\) proportion fish access refuge expected actually utilize  , \\( \\eta_{k}\\) density refuges size range \\((w_{k-1}, w_k]\\) \\(\\sum_{} \\int_{w_{k-1}}^{w_k} N_i(w)~dw\\) gives density fish group size range \\((w_{k-1}, w_k]\\). represents density competitors refuges size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin refuge_density, number refuges available size bin (/m^2). Users can also set noncomplex reef habitat refuge. option convenient finding steady state parameters. function checks supplied refuge parameters valid, adds relevant columns species_params data frame, stores refuge parameters other_params slot params object. Refuge profile parameters can input spreadsheet program saved .csv file. data can read R using command read.csv().","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getSenMort.html","id":null,"dir":"Reference","previous_headings":"","what":"Get senescence mortality — getSenMort","title":"Get senescence mortality — getSenMort","text":"Returns rate senescence mortality size.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getSenMort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get senescence mortality — getSenMort","text":"","code":"getSenMort(   params,   n = initialN(params),   n_pp = initialNResource(params),   n_other = initialNOther(params),   t = 0,   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/getSenMort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get senescence mortality — getSenMort","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getSenMort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get senescence mortality — getSenMort","text":"named two dimensional array (species x size) senescence mortality rates.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getSenMort.html","id":"senescence-mortality","dir":"Reference","previous_headings":"","what":"Senescence mortality","title":"Get senescence mortality — getSenMort","text":"","code":"Senescence mortality \\eqn{\\mu_{sen.i}(w)} is used to represent  mortality caused by external sources such as illness or age. This is  addition to external mortality, \\eqn{\\mu_{ext.i}(w)}, which represents  all mortality that is not due to fishing or predation by predators  included in the model. The rate of senescence mortality is given by:   \\deqn{\\mu_{sen.i}(w) = k_{sen}\\left(\\frac{w}{w_{max.i}}\\right)^{p_{sen}}}       {\\mu_{sen.i}(w) = k_{sen} (w/w_{max.i})^{p_{sen}}   where \\eqn{k_{sen}} and \\eqn{p_sen} are constants defining the shape  of the senescence curve and \\eqn{w_max.i} is the maximum size  of species \\eqn{i} in grams.   Users can change all constants with the `setSenMortParams()` function."},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/getVulnerable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vulnerability level — getVulnerable","title":"Get vulnerability level — getVulnerable","text":"Returns proportion fish size \\(w\\) hidden predation refuge thus vulnerable encountered predators.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getVulnerable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vulnerability level — getVulnerable","text":"","code":"getVulnerable(   params,   n = initialN(params),   n_pp = initialNResource(params),   n_other = initialNOther(params),   t = 0,   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/getVulnerable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vulnerability level — getVulnerable","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getVulnerable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vulnerability level — getVulnerable","text":"Array (species x size) proportion individuals protected predation refuge","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/getVulnerable.html","id":"setting-the-refuge-profile","dir":"Reference","previous_headings":"","what":"Setting the refuge profile","title":"Get vulnerability level — getVulnerable","text":"Refuge profiles account protective behavior prey living high complexity environments (e.g. coral reefs) access predation refuge. refuge profile defines proportion fish within user-defined length bins protected encountered predator. mizerReef determines much fish weight refuge can hold converting user provided fish length bins weight bins average length weight conversion parameters \\(\\bar{}\\) \\(\\bar{b}\\), describe length weight relationship fish dummies used data collection. default values \\(\\bar{} = 0.025, \\bar{b} = 3\\). Assuming fish shelters neutrally buoyant, mass largest fish size category proportional volume refuges classified category. unique refuge profile generated predator group x prey group x prey size combination based given refuge profile parameters well four values params@species_params: length weight conversion values b, refuge_user, true groups utilize predation refuge, bad_pred, false predator groups whose body shape predatory strategy allow access fish within refuge (e.g. eels). ensure food always available predators, maximum proportion fish protected refuge size class set max_protect. refuge profile used calculating food encounter rate reefEncounter() predation mortality rate reefPredMort(). entries dimensionless values 0 1 represent proportion fish corresponding prey size categories hidden within refuge thus encountered predators. refuge available predator-prey interactions determined entirely size-preference. mizerReef package provides three methods define refuge profile. Sigmoidal Method:  method preferred data-poor reefs reefs refuge distribution unknown. also ideal systems one functional group expected utilizing refuge. proportion fish access refuge \\( R_j(w_p) \\) given $$ R_j(w_p) = \\frac{r}                         {1 + e^{ \\left( \\Delta (w - W_{refuge}) \\right)} }$$ \\(W_{refuge}\\) marks body weight refuge becomes scarcer prey. \\(r\\) defines maximum proportion fish access predation refuge always less equal max_protect. \\(\\alpha\\) controls rate availability refuge decreases increasing body size. defaults steep slope 100. method, method_params contain columns named prop_protect L_refuge give values \\(r\\) length refuge becomes scarce cm. Binned Method:  method appropriate theoretical applications rely empirical data. sets refuge constant proportion fish within given size range.  proportion fish group \\(j\\) access refuge given $$ R_j(w_p) = r_k ~~~~~~~ w_p ∈ (~w_{k-1}, w_k~] $$ \\(r_k\\) proportion fish access refuge size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin prop_protect, proportion fish protected within corresponding size bin. Competitive Method:  method appropriate refuge density data available modelled reef. refuge density describes distribution refuges \\((./m^2)\\) across defined fish body size categories. proportion fish size class \\(k\\) access refuge given $$R_{j}(w_p) = \\tau \\cdot \\frac{ \\eta_{k} }                                     { \\sum_i \\int_{w_{k-1}}^{w-k} N_i(w) \\, dw}$$ \\( \\tau \\) proportion fish access refuge expected actually utilize  , \\( \\eta_{k}\\) density refuges size range \\((w_{k-1}, w_k]\\) \\(\\sum_{} \\int_{w_{k-1}}^{w_k} N_i(w)~dw\\) gives density fish group size range \\((w_{k-1}, w_k]\\). represents density competitors refuges size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin refuge_density, number refuges available size bin (/m^2). Users can also set noncomplex reef habitat refuge. option convenient finding steady state parameters. function checks supplied refuge parameters valid, adds relevant columns species_params data frame, stores refuge parameters other_params slot params object. Refuge profile parameters can input spreadsheet program saved .csv file. data can read R using command read.csv().","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/mizerReef-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mizerReef: A mizer extension package for modelling tropical coral reefs.\nIncludes benthic complexity through the provision of predation refuge. — mizerReef-package","title":"mizerReef: A mizer extension package for modelling tropical coral reefs.\nIncludes benthic complexity through the provision of predation refuge. — mizerReef-package","text":"extension package mizer package (https://sizespectrum.org/mizer/) makes easy set mizer model predation refuges, detritus, algae, thereby allowing realistic modelling coral reef fisheries. package developed support creation exploration model coral reefs compare areas based benthic complexity.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/mizerReef-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mizerReef: A mizer extension package for modelling tropical coral reefs.\nIncludes benthic complexity through the provision of predation refuge. — mizerReef-package","text":"Maintainer: Gustav Delius gustav.delius@york.ac.uk (ORCID) [copyright holder] Authors: Chelsey M. Beese beese.c.m@gmail.com (ORCID) Peter J. Mumby p.j.mumby@uq.edu.au (ORCID) Alice Rogers alice.rogers@vuw.ac.nz (ORCID)","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/newReefParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up parameters for a mizerReef model — newReefParams","title":"Set up parameters for a mizerReef model — newReefParams","text":"Sets multi-species size spectrum model additional unstructured resource components, senescence mortality, predation refuge.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/newReefParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up parameters for a mizerReef model — newReefParams","text":"","code":"newReefParams(   species_params,   interaction = NULL,   crit_feed = NULL,   min_w_pp = NA,   w_pp_cutoff = 1,   n = 3/4,   method,   method_params,   refuge_user = NULL,   bad_pred = NULL,   piscivore = NULL,   a_bar = NULL,   b_bar = NULL,   w_settle = NULL,   max_protect = NULL,   tau = NULL,   UR_interaction,   algae_growth = NULL,   scale_rho_a = NULL,   prop_decomp = NULL,   d.external = NULL,   ext_mort_params = NULL,   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/newReefParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up parameters for a mizerReef model — newReefParams","text":"species_params functional group parameter data frame interaction group specific interaction matrix, \\(\\theta_{ij}\\) crit_feed Critical feeding level min_w_pp Minimum size plankton grams w_pp_cutoff Maximum size plankton grams n Allometric growth exponent (also used metabolic exponent p) method desired method setting benthic refuge, can \"sigmoidal\", \"binned\", \"competitive\", \"noncomplex\" method_params data frame containing values specific method calculating refuge refuge_user vector logical values indicating whether functional group uses refuge, TRUE indicates group uses refuge false indicates . Must included params@species_params data frame. bad_pred Optional. vector logical values indicating whether hunting inhibited refuge functional group. FALSE indicates species able encounter prey within refuge (e.g. eels). Must included params@species_params data frame. piscivore Optional. vector logical values indicating whether functional group consumes fish. Must included params@species_params data frame. a_bar Optional. average length weight conversion value \\(\\bar{}\\) \\(\\bar{b}\\) describe fish dummies used counting refuge holes. \\(\\bar{}\\) defaults 0.025. b_bar Optional. average length weight conversion value \\(\\bar{}\\) \\(\\bar{b}\\) describe fish dummies used counting refuge holes. \\(\\bar{b}\\) defaults 3. w_settle Optional. body weight (g) fish settle onto reef. Fish smaller considered larval thus small use predation refuge. Defaults 0.l grams. max_protect Optional. maximum proportion fish (size class) protected refuge. Defaults 0.98. tau Optional. proportion fish access refuge actually use . Defaults 1. UR_interaction Interaction matrix unstructured resources (species x resource) Optional parameters: algae_growth initial growth rate algae grams/year/m^-2. value reset match consumption [reefSteady()]  function steady state abundances match given values. prop_decomp proportion waste material decomposes become part detritus pool. d.external rate detritus biomass sinks pelagic zone becomes part detritus pool grams per year. value reset make differences consumption production [reefSteady()] function steady state abundances match observed values. ext_mort_params Named list containing desired mortality parameters ... Extra parameters passed newMultispeciesParams()","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/newReefParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up parameters for a mizerReef model — newReefParams","text":"object type MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/newReefParams.html","id":"adding-unstructured-resources","dir":"Reference","previous_headings":"","what":"Adding unstructured resources","title":"Set up parameters for a mizerReef model — newReefParams","text":"","code":"mizerReef supports two resource spectra that are not size- structured.  Algae is consumed by herbivorous fish, while detritus is consumed by  herbivorous fish and benthic invertebrates. This function sets the   interaction matrix for these resources as well as any default  parameters necessary to structure them.   The resource interaction matrix \\eqn{\\theta_{ki} modifies the  interaction of each functional group \\eqn{i} with each unstructured  resource \\eqn{k} in the model. This can be used for example to allow   for different diet preferences on each unstructured resource.     Note that interaction with size structured resources, such as  plankton, is still set with the `resource_interaction` column of  the species parameters dataframe."},{"path":"https://cmbeese.github.io/mizerReef/reference/newReefParams.html","id":"senescence-mortality","dir":"Reference","previous_headings":"","what":"Senescence mortality","title":"Set up parameters for a mizerReef model — newReefParams","text":"","code":"Senescence mortality \\eqn{\\mu_{sen.i}(w)} is used to represent  mortality caused by background sources such as illness or age. The   rate of senescence mortality (in 1/year) is given by:   \\deqn{\\mu_{sen.i}(w) = k_{sen}\\left(                              \\frac{log_{10}(w)}{log_{10}(w_{max.i})}                              \\right)^{p_{sen}}}       {\\mu_{sen.i}(w) = k_{sen}       (log_{10}(w)/log_{10}(w_{max.i}))^{p_{sen}}}   where \\eqn{k_{sen}} is the rate of senescence mortality, \\eqn{p_sen}  defines the slope of the senescence curve, \\eqn{w_max.i} maximum body  size of group \\eqn{i} in grams."},{"path":"https://cmbeese.github.io/mizerReef/reference/newReefParams.html","id":"setting-the-refuge-profile","dir":"Reference","previous_headings":"","what":"Setting the refuge profile","title":"Set up parameters for a mizerReef model — newReefParams","text":"Refuge profiles account protective behavior prey living high complexity environments (e.g. coral reefs) access predation refuge. refuge profile defines proportion fish within user-defined length bins protected encountered predator. mizerReef determines much fish weight refuge can hold converting user provided fish length bins weight bins average length weight conversion parameters \\(\\bar{}\\) \\(\\bar{b}\\), describe length weight relationship fish dummies used data collection. default values \\(\\bar{} = 0.025, \\bar{b} = 3\\). Assuming fish shelters neutrally buoyant, mass largest fish size category proportional volume refuges classified category. unique refuge profile generated predator group x prey group x prey size combination based given refuge profile parameters well four values params@species_params: length weight conversion values b, refuge_user, true groups utilize predation refuge, bad_pred, false predator groups whose body shape predatory strategy allow access fish within refuge (e.g. eels). ensure food always available predators, maximum proportion fish protected refuge size class set max_protect. refuge profile used calculating food encounter rate reefEncounter() predation mortality rate reefPredMort(). entries dimensionless values 0 1 represent proportion fish corresponding prey size categories hidden within refuge thus encountered predators. refuge available predator-prey interactions determined entirely size-preference. mizerReef package provides three methods define refuge profile. Sigmoidal Method:  method preferred data-poor reefs reefs refuge distribution unknown. also ideal systems one functional group expected utilizing refuge. proportion fish access refuge \\( R_j(w_p) \\) given $$ R_j(w_p) = \\frac{r}                         {1 + e^{ \\left( \\Delta (w - W_{refuge}) \\right)} }$$ \\(W_{refuge}\\) marks body weight refuge becomes scarcer prey. \\(r\\) defines maximum proportion fish access predation refuge always less equal max_protect. \\(\\alpha\\) controls rate availability refuge decreases increasing body size. defaults steep slope 100. method, method_params contain columns named prop_protect L_refuge give values \\(r\\) length refuge becomes scarce cm. Binned Method:  method appropriate theoretical applications rely empirical data. sets refuge constant proportion fish within given size range.  proportion fish group \\(j\\) access refuge given $$ R_j(w_p) = r_k ~~~~~~~ w_p ∈ (~w_{k-1}, w_k~] $$ \\(r_k\\) proportion fish access refuge size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin prop_protect, proportion fish protected within corresponding size bin. Competitive Method:  method appropriate refuge density data available modelled reef. refuge density describes distribution refuges \\((./m^2)\\) across defined fish body size categories. proportion fish size class \\(k\\) access refuge given $$R_{j}(w_p) = \\tau \\cdot \\frac{ \\eta_{k} }                                     { \\sum_i \\int_{w_{k-1}}^{w-k} N_i(w) \\, dw}$$ \\( \\tau \\) proportion fish access refuge expected actually utilize  , \\( \\eta_{k}\\) density refuges size range \\((w_{k-1}, w_k]\\) \\(\\sum_{} \\int_{w_{k-1}}^{w_k} N_i(w)~dw\\) gives density fish group size range \\((w_{k-1}, w_k]\\). represents density competitors refuges size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin refuge_density, number refuges available size bin (/m^2). Users can also set noncomplex reef habitat refuge. option convenient finding steady state parameters. function checks supplied refuge parameters valid, adds relevant columns species_params data frame, stores refuge parameters other_params slot params object. Refuge profile parameters can input spreadsheet program saved .csv file. data can read R using command read.csv().","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotAlgaeConsumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot algae consumption rates — plotAlgaeConsumption","title":"Plot algae consumption rates — plotAlgaeConsumption","text":"Plot algae consumption rates","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotAlgaeConsumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot algae consumption rates — plotAlgaeConsumption","text":"","code":"plotAlgaeConsumption(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/plotAlgaeConsumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot algae consumption rates — plotAlgaeConsumption","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotAlgaeConsumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot algae consumption rates — plotAlgaeConsumption","text":"pie chart.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotBiomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the biomass of functional groups and unstructured components through\ntime — plotBiomass","title":"Plot the biomass of functional groups and unstructured components through\ntime — plotBiomass","text":"running projection, biomass species unstructured component can plotted time. biomass calculated within user defined size limits (min_w, max_w, min_l, max_l, see get_size_range_array()).","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotBiomass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the biomass of functional groups and unstructured components through\ntime — plotBiomass","text":"","code":"plotBiomass(   sim,   species = NULL,   start_time,   end_time,   y_ticks = 6,   ylim = c(NA, NA),   total = FALSE,   background = TRUE,   highlight = NULL,   return_data = FALSE,   ... )  plotlyBiomass(   sim,   species = NULL,   start_time,   end_time,   y_ticks = 6,   ylim = c(NA, NA),   total = FALSE,   background = TRUE,   highlight = NULL,   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/plotBiomass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the biomass of functional groups and unstructured components through\ntime — plotBiomass","text":"sim object class MizerSim species groups selected. Optional. default target groups selected. vector groups names, numeric vector groups indices, logical vector indicating groups whether selected (TRUE) . start_time first time plotted. Default beginning time series. end_time last time plotted. Default end time series. y_ticks approximate number ticks desired y axis. ylim numeric vector length two providing lower upper limits y axis. Use NA refer existing minimum maximum. values 1e-20 always cut . total boolean value determines whether total biomass species plotted well. Default FALSE. background boolean value determines whether background species included. Ignored model contain background species. Default TRUE. highlight Name vector names species highlighted. return_data boolean value determines whether formatted data used plot returned instead plot . Default value FALSE ... Arguments passed mizer::get_size_range_array min_w Smallest weight size range. Defaults smallest weight model. max_w Largest weight size range. Defaults largest weight model. min_l Smallest length size range. supplied, takes precedence min_w. max_l Largest length size range. supplied, takes precedence max_w.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotBiomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the biomass of functional groups and unstructured components through\ntime — plotBiomass","text":"ggplot2 object, unless return_data = TRUE, case data frame four variables 'Year', 'Biomass', 'Species', 'Legend' returned.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusConsumption.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot detritus consumption rates by species — plotDetritusConsumption","title":"Plot detritus consumption rates by species — plotDetritusConsumption","text":"Plot detritus consumption rates species","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusConsumption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot detritus consumption rates by species — plotDetritusConsumption","text":"","code":"plotDetritusConsumption(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusConsumption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot detritus consumption rates by species — plotDetritusConsumption","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusConsumption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot detritus consumption rates by species — plotDetritusConsumption","text":"pie chart.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusProduction.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot detritus production rates from each source — plotDetritusProduction","title":"Plot detritus production rates from each source — plotDetritusProduction","text":"Plot detritus production rates source","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusProduction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot detritus production rates from each source — plotDetritusProduction","text":"","code":"plotDetritusProduction(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusProduction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot detritus production rates from each source — plotDetritusProduction","text":"params MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotDetritusProduction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot detritus production rates from each source — plotDetritusProduction","text":"pie chart.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotProductivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the productivity of each species — plotProductivity","title":"Plot the productivity of each species — plotProductivity","text":"called MizerParams object steady state productivity plotted.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotProductivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the productivity of each species — plotProductivity","text":"","code":"plotProductivity(   object,   species = NULL,   start_time = NULL,   end_time = NULL,   ... )  plotlyProductivity(object, species = NULL, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/plotProductivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the productivity of each species — plotProductivity","text":"object object class MizerParams species species selected. Optional. default species selected. vector species names, numeric vector species indices, logical vector indicating species whether selected (TRUE) . start_time first time plotted. Default beginning time series. end_time last time plotted. Default end time series. ... unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotProductivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the productivity of each species — plotProductivity","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/plotRefuge.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the refuge profile, species by size — plotRefuge","title":"Plot the refuge profile, species by size — plotRefuge","text":"called MizerParams object initial vulnerability plotted.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotRefuge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the refuge profile, species by size — plotRefuge","text":"","code":"plotRefuge(object, species = NULL, all.sizes = FALSE, return_data = FALSE, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/plotRefuge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the refuge profile, species by size — plotRefuge","text":"object object class MizerParams species species selected. Optional. default species selected. vector species names, numeric vector species indices, logical vector indicating species whether selected (TRUE) . .sizes TRUE, feeding level plotted also sizes outside species' size range. Default FALSE. return_data boolean value determines whether formatted data used plot returned instead plot . Default value FALSE. ... unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotRefuge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the refuge profile, species by size — plotRefuge","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/plotVulnerable.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the vulnerability to predation of species by size — plotVulnerable","title":"Plot the vulnerability to predation of species by size — plotVulnerable","text":"called MizerParams object initial vulnerability plotted.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotVulnerable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the vulnerability to predation of species by size — plotVulnerable","text":"","code":"plotVulnerable(   object,   species = NULL,   all.sizes = FALSE,   return_data = FALSE,   ... )  plotlyVulnerable(   object,   species = NULL,   all.sizes = FALSE,   return_data = FALSE,   ... )  plotlyRefuge(object, species = NULL, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/plotVulnerable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the vulnerability to predation of species by size — plotVulnerable","text":"object object class MizerParams species species selected. Optional. default species selected. vector species names, numeric vector species indices, logical vector indicating species whether selected (TRUE) . .sizes TRUE, feeding level plotted also sizes outside species' size range. Default FALSE. return_data boolean value determines whether formatted data used plot returned instead plot . Default value FALSE. ... unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/plotVulnerable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the vulnerability to predation of species by size — plotVulnerable","text":"ggplot2 object","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/reefEncounter.html","id":null,"dir":"Reference","previous_headings":"","what":"Get encounter rate needed to project a mizerReef model — reefEncounter","title":"Get encounter rate needed to project a mizerReef model — reefEncounter","text":"Calculates rate \\(E_i(w)\\) predator group \\(\\) weight \\(w\\) encounters food (grams/year). usually call function directly instead use getEncounter(), calls function.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefEncounter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get encounter rate needed to project a mizerReef model — reefEncounter","text":"","code":"reefEncounter(   params,   n,   n_pp,   n_other,   t,   vulnerable = reefVulnerable(params, n, n_pp, n_other, t),   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/reefEncounter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get encounter rate needed to project a mizerReef model — reefEncounter","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) vulnerable two dimensional array (prey species x prey size) proportion prey vulnerable encountered. ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefEncounter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get encounter rate needed to project a mizerReef model — reefEncounter","text":"named two dimensional array (predator species x predator size) encounter rates.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefEncounter.html","id":"predation-encounter","dir":"Reference","previous_headings":"","what":"Predation encounter","title":"Get encounter rate needed to project a mizerReef model — reefEncounter","text":"","code":"The encounter rate \\eqn{E_i(w)} at which a predator of species \\eqn{i}  and weight \\eqn{w} encounters food has contributions from the encounter  of fish prey and of resources. This is determined by summing over all  prey species and the resource spectrum and then integrating over all  prey sizes \\eqn{w_p}, weighted by predation kernel \\eqn{\\phi(w,w_p)}:        \\deqn{          E_i(w) = \\gamma_i(w) \\int          \\left( \\theta_{ip} N_R(w_p) + \\sum_{j} \\theta_{ij}          V_{ji}(w_p) N_j(w_p) \\right)          \\phi_i(w,w_p) w_p \\, dw_p.          }{\\gamma_i(w) \\int          ( \\theta_{ip} N_R(w_p) + \\sum_{j} \\theta_{ij} V_{ji}(w_p) N_j(w_p) )          \\phi_i(w,w_p) w_p dw_p.}   Here \\eqn{N_j(w)} is the abundance density of species \\eqn{j} and  \\eqn{N_R(w)} is the abundance density of resource. The overall  prefactor \\eqn{\\gamma_i(w)} determines the predation power of the  predator. It could be interpreted as a search volume and is set with  the [setSearchVolume()] function.   The predation kernel \\eqn{\\phi(w,w_p)}is set with the [setPredKernel()]  function.   The vulnerability to predation, \\eqn{V_{ji}(w)} accounts for protective  behavior of the prey. The parameters that control this are set with the  [setRefuge()] function.   The species interaction matrix \\eqn{\\theta_{ij}} is set with  [setInteraction()] and the resource interaction vector \\eqn{\\theta_{ip}}  is taken from the `interaction_resource`column in  `params@species_params`."},{"path":"https://cmbeese.github.io/mizerReef/reference/reefEncounter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get encounter rate needed to project a mizerReef model — reefEncounter","text":"encounter rate multiplied \\(1-f_0\\) obtain consumption rate, \\(f_0\\) feeding level calculated getFeedingLevel(). used project() function performing simulations. function returns values also sizes outside size-range species. values used, meaningless. model contains additional components added setComponent() specified encounter_fun function encounters components included returned value.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/reefFeedingLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reef feeding level — reefFeedingLevel","title":"Reef feeding level — reefFeedingLevel","text":"function replaces usual mizerFeedingLevel() function returns feeding level 0 piscivores.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefFeedingLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reef feeding level — reefFeedingLevel","text":"","code":"reefFeedingLevel(   params,   n,   n_pp,   n_other,   t,   encounter,   vulnerable = reefVulnerable(params, n, n_pp, n_other, t),   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/reefFeedingLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reef feeding level — reefFeedingLevel","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) vulnerable two dimensional array (prey species x prey size) proportion prey vulnerable encountered. ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefFeedingLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reef feeding level — reefFeedingLevel","text":"two dimensional array (predator species x predator size) feeding level.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/reefMort.html","id":null,"dir":"Reference","previous_headings":"","what":"Total mortality rate in the reef ecosystem model — reefMort","title":"Total mortality rate in the reef ecosystem model — reefMort","text":"function replaces usual mizerMort() function returns sum usual mortality size-based external/ senescence mortality","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefMort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total mortality rate in the reef ecosystem model — reefMort","text":"","code":"reefMort(params, n, n_pp, n_other, t, f_mort, pred_mort, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/reefMort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total mortality rate in the reef ecosystem model — reefMort","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) f_mort two dimensional array (species x size) fishing mortality pred_mort two dimensional array (species x size) predation mortality ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefMort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total mortality rate in the reef ecosystem model — reefMort","text":"named two dimensional array (species x size) total mortality rates.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/reefPredMort.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total predation mortality rate needed to project mizer reef model — reefPredMort","title":"Get total predation mortality rate needed to project mizer reef model — reefPredMort","text":"Calculates total predation mortality rate \\(\\mu_{p,}(w_p)\\) (units 1/year) prey species prey size:","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefPredMort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total predation mortality rate needed to project mizer reef model — reefPredMort","text":"","code":"reefPredMort(   params,   n,   n_pp,   n_other,   t,   pred_rate,   vulnerable = reefVulnerable(params, n, n_pp, n_other, t),   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/reefPredMort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total predation mortality rate needed to project mizer reef model — reefPredMort","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) pred_rate two dimensional array (predator species x predator size) feeding level. vulnerable Array (species x size) proportion individuals protected predation refuge ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefPredMort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total predation mortality rate needed to project mizer reef model — reefPredMort","text":"two dimensional array (prey species x prey size) predation mortality","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefPredMort.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get total predation mortality rate needed to project mizer reef model — reefPredMort","text":"$$\\mu_{p.}(w_p) = \\sum_j {\\tt pred\\_rate}_j(w_p)\\, V_{ji}(w_p)\\, \\theta_{ji}.$$ usually call function directly instead use getPredMort(), calls function unless alternative function registered, see .","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/reefRates.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all rates needed to project a mizerReef model — reefRates","title":"Get all rates needed to project a mizerReef model — reefRates","text":"Calls rate functions sequence collects results list.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefRates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all rates needed to project a mizerReef model — reefRates","text":"","code":"reefRates(params, n, n_pp, n_other, t = 0, effort, rates_fns, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/reefRates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all rates needed to project a mizerReef model — reefRates","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) effort effort fishing gear rates_fns Named list functions call calculate rates. Note list holds functions , names. ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefRates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all rates needed to project a mizerReef model — reefRates","text":"List rates.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefRates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all rates needed to project a mizerReef model — reefRates","text":"default function returns list following components: predation vulnerability reefVulnerable() encounter reefEncounter() feeding level reefFeedingLevel() e mizerEReproAndGrowth() e_repro mizerERepro() e_growth mizerEGrowth() pred_rate mizerPredRate() pred_mort reefPredMort() sen_mort reefSenMort() f_mort mizerFMort() mort reefMort() rdi mizerRDI() rdd BevertonHoltRDD() resource_mort mizerResourceMort() However can replace rate functions rate function wish, see setRateFunction() details.","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/reefSenMort.html","id":null,"dir":"Reference","previous_headings":"","what":"Expanding external mortality rate to include senescence — reefSenMort","title":"Expanding external mortality rate to include senescence — reefSenMort","text":"Expanding external mortality rate include senescence","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefSenMort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expanding external mortality rate to include senescence — reefSenMort","text":"","code":"reefSenMort(params, n, n_pp, n_other, t = 0, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/reefSenMort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expanding external mortality rate to include senescence — reefSenMort","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefSenMort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expanding external mortality rate to include senescence — reefSenMort","text":"named two dimensional array (species x size) senescence mortality rates.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefSenMort.html","id":"senescence-mortality","dir":"Reference","previous_headings":"","what":"Senescence mortality","title":"Expanding external mortality rate to include senescence — reefSenMort","text":"","code":"Senescence mortality \\eqn{\\mu_{sen.i}(w)} is used to represent  mortality caused by external sources such as illness or age. This is  addition to external mortality, \\eqn{\\mu_{ext.i}(w)}, which represents  all mortality that is not due to fishing or predation by predators  included in the model. The rate of senescence mortality is given by:   \\deqn{\\mu_{sen.i}(w) = k_{sen}\\left(\\frac{w}{w_{max.i}}\\right)^{p_{sen}}}       {\\mu_{sen.i}(w) = k_{sen} (w/w_{max.i})^{p_{sen}}   where \\eqn{k_{sen}} and \\eqn{p_sen} are constants defining the shape  of the senescence curve and \\eqn{w_max.i} is the maximum size  of species \\eqn{i} in grams.   Users can change all constants with the `setSenMortParams()` function."},{"path":"https://cmbeese.github.io/mizerReef/reference/reefVulnerable.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the proportion of fish vulnerable to being encountered by predators\nat each time step — reefVulnerable","title":"Find the proportion of fish vulnerable to being encountered by predators\nat each time step — reefVulnerable","text":"function calculates proportion fish hidden predation refuge thus vulnerable encountered predators.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefVulnerable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the proportion of fish vulnerable to being encountered by predators\nat each time step — reefVulnerable","text":"","code":"reefVulnerable(params, n, n_pp, n_other, t = 0, ...)"},{"path":"https://cmbeese.github.io/mizerReef/reference/reefVulnerable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the proportion of fish vulnerable to being encountered by predators\nat each time step — reefVulnerable","text":"params MizerParams object n matrix species abundances (species x size). n_pp vector resource abundance size n_other list abundances dynamical components ecosystem t time calculation (used standard mizer rate functions useful extensions time-dependent parameters.) ... Unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefVulnerable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the proportion of fish vulnerable to being encountered by predators\nat each time step — reefVulnerable","text":"Array (species x size) proportion individuals protected predation refuge","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reefVulnerable.html","id":"setting-the-refuge-profile","dir":"Reference","previous_headings":"","what":"Setting the refuge profile","title":"Find the proportion of fish vulnerable to being encountered by predators\nat each time step — reefVulnerable","text":"Refuge profiles account protective behavior prey living high complexity environments (e.g. coral reefs) access predation refuge. refuge profile defines proportion fish within user-defined length bins protected encountered predator. mizerReef determines much fish weight refuge can hold converting user provided fish length bins weight bins average length weight conversion parameters \\(\\bar{}\\) \\(\\bar{b}\\), describe length weight relationship fish dummies used data collection. default values \\(\\bar{} = 0.025, \\bar{b} = 3\\). Assuming fish shelters neutrally buoyant, mass largest fish size category proportional volume refuges classified category. unique refuge profile generated predator group x prey group x prey size combination based given refuge profile parameters well four values params@species_params: length weight conversion values b, refuge_user, true groups utilize predation refuge, bad_pred, false predator groups whose body shape predatory strategy allow access fish within refuge (e.g. eels). ensure food always available predators, maximum proportion fish protected refuge size class set max_protect. refuge profile used calculating food encounter rate reefEncounter() predation mortality rate reefPredMort(). entries dimensionless values 0 1 represent proportion fish corresponding prey size categories hidden within refuge thus encountered predators. refuge available predator-prey interactions determined entirely size-preference. mizerReef package provides three methods define refuge profile. Sigmoidal Method:  method preferred data-poor reefs reefs refuge distribution unknown. also ideal systems one functional group expected utilizing refuge. proportion fish access refuge \\( R_j(w_p) \\) given $$ R_j(w_p) = \\frac{r}                         {1 + e^{ \\left( \\Delta (w - W_{refuge}) \\right)} }$$ \\(W_{refuge}\\) marks body weight refuge becomes scarcer prey. \\(r\\) defines maximum proportion fish access predation refuge always less equal max_protect. \\(\\alpha\\) controls rate availability refuge decreases increasing body size. defaults steep slope 100. method, method_params contain columns named prop_protect L_refuge give values \\(r\\) length refuge becomes scarce cm. Binned Method:  method appropriate theoretical applications rely empirical data. sets refuge constant proportion fish within given size range.  proportion fish group \\(j\\) access refuge given $$ R_j(w_p) = r_k ~~~~~~~ w_p ∈ (~w_{k-1}, w_k~] $$ \\(r_k\\) proportion fish access refuge size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin prop_protect, proportion fish protected within corresponding size bin. Competitive Method:  method appropriate refuge density data available modelled reef. refuge density describes distribution refuges \\((./m^2)\\) across defined fish body size categories. proportion fish size class \\(k\\) access refuge given $$R_{j}(w_p) = \\tau \\cdot \\frac{ \\eta_{k} }                                     { \\sum_i \\int_{w_{k-1}}^{w-k} N_i(w) \\, dw}$$ \\( \\tau \\) proportion fish access refuge expected actually utilize  , \\( \\eta_{k}\\) density refuges size range \\((w_{k-1}, w_k]\\) \\(\\sum_{} \\int_{w_{k-1}}^{w_k} N_i(w)~dw\\) gives density fish group size range \\((w_{k-1}, w_k]\\). represents density competitors refuges size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin refuge_density, number refuges available size bin (/m^2). Users can also set noncomplex reef habitat refuge. option convenient finding steady state parameters. function checks supplied refuge parameters valid, adds relevant columns species_params data frame, stores refuge parameters other_params slot params object. Refuge profile parameters can input spreadsheet program saved .csv file. data can read R using command read.csv().","code":""},{"path":[]},{"path":"https://cmbeese.github.io/mizerReef/reference/reef_steady.html","id":null,"dir":"Reference","previous_headings":"","what":"Project a mizerReef model to steady state — reef_steady","title":"Project a mizerReef model to steady state — reef_steady","text":"function tune detritus algae parameters running mizer's default projectToSteady function.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reef_steady.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project a mizerReef model to steady state — reef_steady","text":"","code":"reef_steady(   params,   t_max = 100,   t_per = 1.5,   dt = 0.1,   tol = 0.1 * dt,   return_sim = FALSE,   preserve = c(\"reproduction_level\", \"erepro\", \"R_max\"),   progress_bar = TRUE )"},{"path":"https://cmbeese.github.io/mizerReef/reference/reef_steady.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project a mizerReef model to steady state — reef_steady","text":"params MizerParams object t_max maximum number years run simulation. Default 100. t_per simulation broken shorter runs t_per years, check convergence. Default value 1.5. chosen odd multiple timestep dt order able detect period 2 cycles. dt time step use project(). tol simulation stops relative change egg production RDI t_per years less tol every species. return_sim TRUE, function returns MizerSim object holding result simulation run. FALSE (default) function returns MizerParams object \"initial\" slots set steady state. preserve Specifies whether reproduction_level preserved (default) maximum reproduction rate R_max reproductive efficiency erepro. See setBevertonHolt() explanation reproduction_level. progress_bar shiny progress object implement progress bar shiny app. Default FALSE.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/reef_steady.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project a mizerReef model to steady state — reef_steady","text":"object type MizerParams","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/removeSpecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove some species from the model — removeSpecies","title":"Remove some species from the model — removeSpecies","text":"calls mizer::removeSpecies() addition removes relevant row detritus algae consumption arrays rho.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/removeSpecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove some species from the model — removeSpecies","text":"","code":"removeSpecies(params, species)"},{"path":"https://cmbeese.github.io/mizerReef/reference/removeSpecies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove some species from the model — removeSpecies","text":"params MizerParams object species species removed. vector species names, numeric vector species indices, logical vector indicating species whether removed (TRUE) .","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/removeSpecies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove some species from the model — removeSpecies","text":"MizerParams object fewer species.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_algae.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale algae biomass without changing anything else — rescale_algae","title":"Rescale algae biomass without changing anything else — rescale_algae","text":"multiplies algae biomass factor divides interaction species algae factor, keep total consumption algae unchanged.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_algae.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale algae biomass without changing anything else — rescale_algae","text":"","code":"rescale_algae(params, factor)"},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_algae.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale algae biomass without changing anything else — rescale_algae","text":"params MizerParams object factor number","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_algae.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale algae biomass without changing anything else — rescale_algae","text":"updated MizerParams object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_detritus.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale detritus biomass without changing anything else — rescale_detritus","title":"Rescale detritus biomass without changing anything else — rescale_detritus","text":"multiplies detritus biomass factor divides interaction species detritus factor, keep total consumption detritus unchanged. also divides mass-specific rate decomposition factor total detritus decomposition rate stays .","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_detritus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale detritus biomass without changing anything else — rescale_detritus","text":"","code":"rescale_detritus(params, factor)"},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_detritus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale detritus biomass without changing anything else — rescale_detritus","text":"params MizerParams object factor number","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/rescale_detritus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rescale detritus biomass without changing anything else — rescale_detritus","text":"updated MizerParams object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/scaleModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale Model Parameters — scaleModel","title":"Scale Model Parameters — scaleModel","text":"function scales various model parameters given factor.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/scaleModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale Model Parameters — scaleModel","text":"","code":"scaleModel(params, factor)"},{"path":"https://cmbeese.github.io/mizerReef/reference/scaleModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale Model Parameters — scaleModel","text":"params mizer model object factor numeric value scale model","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/scaleModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale Model Parameters — scaleModel","text":"mizer model object scaled parameters","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setExtMortParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the parameters for external mortality — setExtMortParams","title":"Set the parameters for external mortality — setExtMortParams","text":"mizerReef models contain two sources external mortality, residual natural mortality senescence. function checks given parameters valid, sets defaults, stores mizerParams object.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setExtMortParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the parameters for external mortality — setExtMortParams","text":"","code":"setExtMortParams(params, ext_mort_params = NULL)"},{"path":"https://cmbeese.github.io/mizerReef/reference/setExtMortParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the parameters for external mortality — setExtMortParams","text":"params MizerParams object Optional parameters: ext_mort_params Named list containing desired mortality parameters","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setExtMortParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the parameters for external mortality — setExtMortParams","text":"MizerParams object updated mortality parameters","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setExtMortParams.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set the parameters for external mortality — setExtMortParams","text":"External mortality implemented default mizerReef. need set parameters. function used change default values.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setExtMortParams.html","id":"residual-natural-mortality","dir":"Reference","previous_headings":"","what":"Residual natural mortality","title":"Set the parameters for external mortality — setExtMortParams","text":"","code":"Residual natural mortality accounts for any external predation or  fishing mortality that is not explicitly included in the model. It is  assumed to decrease allometrically with body size. Residual natural  mortality is a rate with units 1/year given by:    \\deqn{\\mu_{nat.i}(w) = \\mu_{nat}\\, w^{1-n}.}       {\\mu_{nat.i}(w) = \\mu_{nat}\\, w^{1-n}.}          Here \\eqn{\\mu_{nat}} is the residual natural mortality rate at size   1 g and \\eqn{n} is the allometric scaling exponent. In mizerReef,    these default to \\eqn{\\mu_{nat} = 0.2} and \\eqn{n = 0.75}."},{"path":"https://cmbeese.github.io/mizerReef/reference/setExtMortParams.html","id":"senescence-mortality","dir":"Reference","previous_headings":"","what":"Senescence mortality","title":"Set the parameters for external mortality — setExtMortParams","text":"","code":"Senescence mortality \\eqn{\\mu_{sen.i}(w)} is used to represent  mortality caused by background sources such as illness or age. The   rate of senescence mortality (in 1/year) is given by:   \\deqn{\\mu_{sen.i}(w) = k_{sen}\\left(                              \\frac{log_{10}(w)}{log_{10}(w_{max.i})}                              \\right)^{p_{sen}}}       {\\mu_{sen.i}(w) = k_{sen}       (log_{10}(w)/log_{10}(w_{max.i}))^{p_{sen}}}   where \\eqn{k_{sen}} is the rate of senescence mortality, \\eqn{p_sen}  defines the slope of the senescence curve, \\eqn{w_max.i} maximum body  size of group \\eqn{i} in grams."},{"path":"https://cmbeese.github.io/mizerReef/reference/setRefuge.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the refuge profile parameters — setRefuge","title":"Set the refuge profile parameters — setRefuge","text":"Checks given refuge parameters valid stores mizerParams object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setRefuge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the refuge profile parameters — setRefuge","text":"","code":"setRefuge(   params,   method,   method_params = NULL,   refuge_user = NULL,   bad_pred = NULL,   piscivore = NULL,   a_bar = NULL,   b_bar = NULL,   w_settle = NULL,   max_protect = NULL,   tau = NULL,   ... )"},{"path":"https://cmbeese.github.io/mizerReef/reference/setRefuge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the refuge profile parameters — setRefuge","text":"params MizerParams object method desired method setting benthic refuge, can \"sigmoidal\", \"binned\", \"competitive\", \"noncomplex\" method_params data frame containing values specific method calculating refuge refuge_user vector logical values indicating whether functional group uses refuge, TRUE indicates group uses refuge false indicates . Must included params@species_params data frame. bad_pred Optional. vector logical values indicating whether hunting inhibited refuge functional group. FALSE indicates species able encounter prey within refuge (e.g. eels). Must included params@species_params data frame. piscivore Optional. vector logical values indicating whether functional group consumes fish. Must included params@species_params data frame. a_bar Optional. average length weight conversion value \\(\\bar{}\\) \\(\\bar{b}\\) describe fish dummies used counting refuge holes. \\(\\bar{}\\) defaults 0.025. b_bar Optional. average length weight conversion value \\(\\bar{}\\) \\(\\bar{b}\\) describe fish dummies used counting refuge holes. \\(\\bar{b}\\) defaults 3. w_settle Optional. body weight (g) fish settle onto reef. Fish smaller considered larval thus small use predation refuge. Defaults 0.l grams. max_protect Optional. maximum proportion fish (size class) protected refuge. Defaults 0.98. tau Optional. proportion fish access refuge actually use . Defaults 1. ... unused","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setRefuge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the refuge profile parameters — setRefuge","text":"MizerParams object updated refuge parameters","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setRefuge.html","id":"setting-the-refuge-profile","dir":"Reference","previous_headings":"","what":"Setting the refuge profile","title":"Set the refuge profile parameters — setRefuge","text":"Refuge profiles account protective behavior prey living high complexity environments (e.g. coral reefs) access predation refuge. refuge profile defines proportion fish within user-defined length bins protected encountered predator. mizerReef determines much fish weight refuge can hold converting user provided fish length bins weight bins average length weight conversion parameters \\(\\bar{}\\) \\(\\bar{b}\\), describe length weight relationship fish dummies used data collection. default values \\(\\bar{} = 0.025, \\bar{b} = 3\\). Assuming fish shelters neutrally buoyant, mass largest fish size category proportional volume refuges classified category. unique refuge profile generated predator group x prey group x prey size combination based given refuge profile parameters well four values params@species_params: length weight conversion values b, refuge_user, true groups utilize predation refuge, bad_pred, false predator groups whose body shape predatory strategy allow access fish within refuge (e.g. eels). ensure food always available predators, maximum proportion fish protected refuge size class set max_protect. refuge profile used calculating food encounter rate reefEncounter() predation mortality rate reefPredMort(). entries dimensionless values 0 1 represent proportion fish corresponding prey size categories hidden within refuge thus encountered predators. refuge available predator-prey interactions determined entirely size-preference. mizerReef package provides three methods define refuge profile. Sigmoidal Method:  method preferred data-poor reefs reefs refuge distribution unknown. also ideal systems one functional group expected utilizing refuge. proportion fish access refuge \\( R_j(w_p) \\) given $$ R_j(w_p) = \\frac{r}                         {1 + e^{ \\left( \\Delta (w - W_{refuge}) \\right)} }$$ \\(W_{refuge}\\) marks body weight refuge becomes scarcer prey. \\(r\\) defines maximum proportion fish access predation refuge always less equal max_protect. \\(\\alpha\\) controls rate availability refuge decreases increasing body size. defaults steep slope 100. method, method_params contain columns named prop_protect L_refuge give values \\(r\\) length refuge becomes scarce cm. Binned Method:  method appropriate theoretical applications rely empirical data. sets refuge constant proportion fish within given size range.  proportion fish group \\(j\\) access refuge given $$ R_j(w_p) = r_k ~~~~~~~ w_p ∈ (~w_{k-1}, w_k~] $$ \\(r_k\\) proportion fish access refuge size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin prop_protect, proportion fish protected within corresponding size bin. Competitive Method:  method appropriate refuge density data available modelled reef. refuge density describes distribution refuges \\((./m^2)\\) across defined fish body size categories. proportion fish size class \\(k\\) access refuge given $$R_{j}(w_p) = \\tau \\cdot \\frac{ \\eta_{k} }                                     { \\sum_i \\int_{w_{k-1}}^{w-k} N_i(w) \\, dw}$$ \\( \\tau \\) proportion fish access refuge expected actually utilize  , \\( \\eta_{k}\\) density refuges size range \\((w_{k-1}, w_k]\\) \\(\\sum_{} \\int_{w_{k-1}}^{w_k} N_i(w)~dw\\) gives density fish group size range \\((w_{k-1}, w_k]\\). represents density competitors refuges size class \\(k\\). method, method_params contain columns named start_Land end_L contain starting ending lengths cm size bin refuge_density, number refuges available size bin (/m^2). Users can also set noncomplex reef habitat refuge. option convenient finding steady state parameters. function checks supplied refuge parameters valid, adds relevant columns species_params data frame, stores refuge parameters other_params slot params object. Refuge profile parameters can input spreadsheet program saved .csv file. data can read R using command read.csv().","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setURParams.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks unstructured resource interaction matrix — setURParams","title":"Checks unstructured resource interaction matrix — setURParams","text":"Checks unstructured resource interaction matrix","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setURParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks unstructured resource interaction matrix — setURParams","text":"","code":"setURParams(   params,   UR_interaction = NULL,   algae_growth = NULL,   scale_rho_a = NULL,   prop_decomp = NULL,   d.external = NULL )"},{"path":"https://cmbeese.github.io/mizerReef/reference/setURParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks unstructured resource interaction matrix — setURParams","text":"params MizerParams object UR_interaction Interaction matrix unstructured resources (species x resource) Optional parameters: algae_growth initial growth rate algae grams/year/m^-2. value reset match consumption [reefSteady()]  function steady state abundances match given values. prop_decomp proportion waste material decomposes become part detritus pool. d.external rate detritus biomass sinks pelagic zone becomes part detritus pool grams per year. value reset make differences consumption production [reefSteady()] function steady state abundances match observed values.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setURParams.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks unstructured resource interaction matrix — setURParams","text":"setUResourceParams: MizerParams object updated unstructured resource parameters","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/setURParams.html","id":"adding-unstructured-resources","dir":"Reference","previous_headings":"","what":"Adding unstructured resources","title":"Checks unstructured resource interaction matrix — setURParams","text":"","code":"mizerReef supports two resource spectra that are not size- structured.  Algae is consumed by herbivorous fish, while detritus is consumed by  herbivorous fish and benthic invertebrates. This function sets the   interaction matrix for these resources as well as any default  parameters necessary to structure them.   The resource interaction matrix \\eqn{\\theta_{ki} modifies the  interaction of each functional group \\eqn{i} with each unstructured  resource \\eqn{k} in the model. This can be used for example to allow   for different diet preferences on each unstructured resource.     Note that interaction with size structured resources, such as  plankton, is still set with the `resource_interaction` column of  the species parameters dataframe."},{"path":"https://cmbeese.github.io/mizerReef/reference/tune_algae_detritus.html","id":null,"dir":"Reference","previous_headings":"","what":"Tune algae and detritus to steady state — tune_algae_detritus","title":"Tune algae and detritus to steady state — tune_algae_detritus","text":"first sets rate degradation algae given abundances, algae steady state. sets rate detritus flows external sources (e.g. pelagic zone) given abundances detritus steady state.","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/tune_algae_detritus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tune algae and detritus to steady state — tune_algae_detritus","text":"","code":"tune_algae_detritus(params)"},{"path":"https://cmbeese.github.io/mizerReef/reference/tune_algae_detritus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tune algae and detritus to steady state — tune_algae_detritus","text":"params MizerParams object","code":""},{"path":"https://cmbeese.github.io/mizerReef/reference/tune_algae_detritus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tune algae and detritus to steady state — tune_algae_detritus","text":"updated MizerParams object","code":""}]
